@model GameCore.Core.ViewModels.CreatePostViewModel
@{
    ViewData["Title"] = "ÁôºË°®Ë≤ºÊñá";
    ViewData["ActivePage"] = "Forum";
}

<div class="container-fluid">
    <!-- È†ÅÈù¢Ê®ôÈ°åÂíåÂ∞éËà™ -->
    <div class="row mb-4">
        <div class="col-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="/Forum" class="text-decoration-none">
                            <i class="fas fa-comments"></i> Ë´ñÂ£á
                        </a>
                    </li>
                    <li class="breadcrumb-item">
                        <a href="/Forum/Posts/@Model?.ForumId" class="text-decoration-none">
                            @Model?.ForumName ?? "ÁâàÈù¢"
                        </a>
                    </li>
                    <li class="breadcrumb-item active" aria-current="page">
                        ÁôºË°®Ë≤ºÊñá
                    </li>
                </ol>
            </nav>
            
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h3 mb-0 text-gray-800">
                        <i class="fas fa-plus text-primary"></i>
                        ÁôºË°®Ë≤ºÊñá
                    </h1>
                    <p class="text-muted mb-0">Âú® @(Model?.ForumName ?? "ÁâàÈù¢") ÁôºË°®Êñ∞Ë≤ºÊñá</p>
                </div>
                <div class="d-flex gap-2">
                    <a href="/Forum/Posts/@Model?.ForumId" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left"></i> ËøîÂõûÁâàÈù¢
                    </a>
                    <button type="button" class="btn btn-outline-info" onclick="previewPost()">
                        <i class="fas fa-eye"></i> È†êË¶Ω
                    </button>
                </div>
            </div>
        </div>
    </div>

    <form id="createPostForm" method="post">
        <div class="row">
            <!-- Â∑¶ÂÅ¥ÔºöÂâµÂª∫Ë°®ÂñÆ -->
            <div class="col-lg-8 mb-4">
                <div class="card shadow-sm">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-edit"></i>
                            Ë≤ºÊñáÂÖßÂÆπ
                        </h5>
                    </div>
                    <div class="card-body">
                        <!-- Ê®ôÈ°å -->
                        <div class="mb-3">
                            <label for="title" class="form-label">Ê®ôÈ°å <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="title" name="Title" 
                                   placeholder="Ëº∏ÂÖ•Ë≤ºÊñáÊ®ôÈ°å..." required maxlength="200">
                            <div class="form-text">Ê®ôÈ°åÈï∑Â∫¶‰∏çËÉΩË∂ÖÈÅé 200 Â≠óÂÖÉ</div>
                        </div>

                        <!-- ÂÖßÂÆπ -->
                        <div class="mb-3">
                            <label for="content" class="form-label">ÂÖßÂÆπ <span class="text-danger">*</span></label>
                            <textarea class="form-control" id="content" name="Content" rows="15" 
                                      placeholder="Ëº∏ÂÖ•Ë≤ºÊñáÂÖßÂÆπ..." required></textarea>
                            <div class="form-text">ÊîØÊè¥ Markdown Ë™ûÊ≥ï</div>
                        </div>

                        <!-- Ê®ôÁ±§ -->
                        <div class="mb-3">
                            <label for="tags" class="form-label">Ê®ôÁ±§</label>
                            <input type="text" class="form-control" id="tags" name="Tags" 
                                   placeholder="Áî®ÈÄóËôüÂàÜÈöîÂ§öÂÄãÊ®ôÁ±§Ôºå‰æãÂ¶ÇÔºöÊîªÁï•, ÂøÉÂæó, ÂïèÈ°å">
                            <div class="form-text">Ê®ôÁ±§ÂèØ‰ª•Âπ´Âä©ÂÖ∂‰ªñÁî®Êà∂Êõ¥ÂÆπÊòìÊâæÂà∞ÊÇ®ÁöÑË≤ºÊñá</div>
                        </div>

                        <!-- Ë≤ºÊñáÈ°ûÂûã -->
                        <div class="mb-3">
                            <label for="type" class="form-label">Ë≤ºÊñáÈ°ûÂûã</label>
                            <select class="form-select" id="type" name="Type">
                                <option value="discussion" selected>Ë®éË´ñ</option>
                                <option value="question">ÂïèÈ°å</option>
                                <option value="guide">ÊîªÁï•</option>
                                <option value="share">ÂàÜ‰∫´</option>
                                <option value="announcement">ÂÖ¨Âëä</option>
                            </select>
                        </div>

                        <!-- Á∑®ËºØÂ∑•ÂÖ∑ -->
                        <div class="mb-3">
                            <label class="form-label">Á∑®ËºØÂ∑•ÂÖ∑</label>
                            <div class="d-flex flex-wrap gap-2">
                                <button type="button" class="btn btn-outline-secondary btn-sm" onclick="insertMarkdown('**Á≤óÈ´î**')">
                                    <strong>B</strong>
                                </button>
                                <button type="button" class="btn btn-outline-secondary btn-sm" onclick="insertMarkdown('*ÊñúÈ´î*')">
                                    <em>I</em>
                                </button>
                                <button type="button" class="btn btn-outline-secondary btn-sm" onclick="insertMarkdown('[ÈÄ£Áµê](URL)')">
                                    üîó
                                </button>
                                <button type="button" class="btn btn-outline-secondary btn-sm" onclick="insertMarkdown('![ÂúñÁâá](URL)')">
                                    üñºÔ∏è
                                </button>
                                <button type="button" class="btn btn-outline-secondary btn-sm" onclick="insertMarkdown('`Á®ãÂºèÁ¢º`')">
                                    <code>Code</code>
                                </button>
                                <button type="button" class="btn btn-outline-secondary btn-sm" onclick="insertMarkdown('```\nÁ®ãÂºèÁ¢ºÂçÄÂ°ä\n```')">
                                    üìù
                                </button>
                                <button type="button" class="btn btn-outline-secondary btn-sm" onclick="insertMarkdown('- ÂàóË°®È†ÖÁõÆ')">
                                    üìã
                                </button>
                                <button type="button" class="btn btn-outline-secondary btn-sm" onclick="insertMarkdown('> ÂºïÁî®ÊñáÂ≠ó')">
                                    üí¨
                                </button>
                                <button type="button" class="btn btn-outline-secondary btn-sm" onclick="insertMarkdown('# Ê®ôÈ°å')">
                                    H1
                                </button>
                                <button type="button" class="btn btn-outline-secondary btn-sm" onclick="insertMarkdown('## Ê®ôÈ°å')">
                                    H2
                                </button>
                            </div>
                        </div>

                        <!-- Êèê‰∫§ÈÅ∏È†Ö -->
                        <div class="mb-3">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="notifyFollowers" name="NotifyFollowers" checked>
                                        <label class="form-check-label" for="notifyFollowers">
                                            ÈÄöÁü•ÈóúÊ≥®ËÄÖ
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="allowReplies" name="AllowReplies" checked>
                                        <label class="form-check-label" for="allowReplies">
                                            ÂÖÅË®±ÂõûË¶Ü
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Êèê‰∫§ÊåâÈàï -->
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="d-flex gap-2">
                                <button type="button" class="btn btn-outline-warning" onclick="saveAsDraft()">
                                    <i class="fas fa-save"></i> ÂÑ≤Â≠òËçâÁ®ø
                                </button>
                                <button type="button" class="btn btn-outline-info" onclick="loadDraft()">
                                    <i class="fas fa-folder-open"></i> ËºâÂÖ•ËçâÁ®ø
                                </button>
                            </div>
                            <div class="d-flex gap-2">
                                <button type="button" class="btn btn-outline-secondary" onclick="resetForm()">
                                    <i class="fas fa-undo"></i> ÈáçÁΩÆ
                                </button>
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-paper-plane"></i> ÁôºË°®Ë≤ºÊñá
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Âè≥ÂÅ¥ÔºöÈ†êË¶ΩÂíåË≥áË®ä -->
            <div class="col-lg-4 mb-4">
                <!-- È†êË¶ΩÂçÄÂüü -->
                <div class="card shadow-sm mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-eye"></i>
                            È†êË¶Ω
                        </h5>
                    </div>
                    <div class="card-body">
                        <div id="previewContent" class="preview-content">
                            <p class="text-muted text-center">ÈªûÊìäÈ†êË¶ΩÊåâÈàïÊü•ÁúãÊïàÊûú</p>
                        </div>
                    </div>
                </div>

                <!-- ÁâàÈù¢Ë≥áË®ä -->
                <div class="card shadow-sm mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-folder"></i>
                            ÁâàÈù¢Ë≥áË®ä
                        </h5>
                    </div>
                    <div class="card-body">
                        <h6 class="mb-2">@Model?.ForumName</h6>
                        <p class="text-muted small mb-3">@Model?.ForumDescription</p>
                        <div class="forum-stats">
                            <div class="row text-center">
                                <div class="col-4">
                                    <div class="stat-item">
                                        <h6 class="text-primary mb-1">@(Model?.ForumPostCount ?? 0)</h6>
                                        <small class="text-muted">Ë≤ºÊñá</small>
                                    </div>
                                </div>
                                <div class="col-4">
                                    <div class="stat-item">
                                        <h6 class="text-success mb-1">@(Model?.ForumReplyCount ?? 0)</h6>
                                        <small class="text-muted">ÂõûË¶Ü</small>
                                    </div>
                                </div>
                                <div class="col-4">
                                    <div class="stat-item">
                                        <h6 class="text-info mb-1">@(Model?.ForumSubscriberCount ?? 0)</h6>
                                        <small class="text-muted">Ë®ÇÈñ±</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- ÁôºÊñáÊåáÂçó -->
                <div class="card shadow-sm mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-lightbulb"></i>
                            ÁôºÊñáÊåáÂçó
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="posting-guidelines">
                            <div class="mb-2">
                                <strong>‚úÖ Âª∫Ë≠∞Ôºö</strong>
                                <ul class="small text-muted mb-0">
                                    <li>‰ΩøÁî®Ê∏ÖÊô∞ÁöÑÊ®ôÈ°å</li>
                                    <li>ÂÖßÂÆπË¶ÅÊúâÂÉπÂÄº</li>
                                    <li>ÈÅ©Áï∂‰ΩøÁî®Ê®ôÁ±§</li>
                                    <li>ÈÅµÂÆàÁâàÈù¢Ë¶èÂâá</li>
                                </ul>
                            </div>
                            <div class="mb-2">
                                <strong>‚ùå ÈÅøÂÖçÔºö</strong>
                                <ul class="small text-muted mb-0">
                                    <li>ÁÑ°ÊÑèÁæ©ÁöÑÂÖßÂÆπ</li>
                                    <li>ÈáçË§áÁôºÊñá</li>
                                    <li>ÊÉ°ÊÑèÁÅåÊ∞¥</li>
                                    <li>ÈÅïÂèçÁâàË¶è</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Âø´ÈÄüÊìç‰Ωú -->
                <div class="card shadow-sm">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-tools"></i>
                            Âø´ÈÄüÊìç‰Ωú
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <button type="button" class="btn btn-outline-secondary btn-sm" onclick="insertTemplate('question')">
                                <i class="fas fa-question-circle"></i> ÂïèÈ°åÊ®°Êùø
                            </button>
                            <button type="button" class="btn btn-outline-secondary btn-sm" onclick="insertTemplate('guide')">
                                <i class="fas fa-book"></i> ÊîªÁï•Ê®°Êùø
                            </button>
                            <button type="button" class="btn btn-outline-secondary btn-sm" onclick="insertTemplate('share')">
                                <i class="fas fa-share-alt"></i> ÂàÜ‰∫´Ê®°Êùø
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<!-- È†êË¶Ω Modal -->
<div class="modal fade" id="previewModal" tabindex="-1" aria-labelledby="previewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="previewModalLabel">
                    <i class="fas fa-eye"></i> Ë≤ºÊñáÈ†êË¶Ω
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="modalPreviewContent"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ÈóúÈñâ</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .preview-content {
            min-height: 200px;
            border: 1px dashed #dee2e6;
            border-radius: 0.375rem;
            padding: 1rem;
            background-color: #f8f9fc;
        }

        .preview-content.preview-loaded {
            border: 1px solid #dee2e6;
            background-color: white;
        }

        .posting-guidelines ul {
            padding-left: 1rem;
            margin-bottom: 0;
        }

        .posting-guidelines li {
            margin-bottom: 0.25rem;
        }

        .stat-item h6 {
            font-size: 1.1rem;
            font-weight: bold;
        }

        .stat-item small {
            font-size: 0.75rem;
        }

        .card-header {
            background-color: #f8f9fc;
            border-bottom: 1px solid #e3e6f0;
        }

        .breadcrumb {
            background-color: transparent;
            padding: 0;
            margin-bottom: 1rem;
        }

        .breadcrumb-item a {
            color: #007bff;
        }

        .breadcrumb-item.active {
            color: #6c757d;
        }

        .btn-sm {
            font-size: 0.8rem;
            padding: 0.375rem 0.5rem;
        }

        /* Markdown È†êË¶ΩÊ®£Âºè */
        .markdown-preview h1, .markdown-preview h2, .markdown-preview h3,
        .markdown-preview h4, .markdown-preview h5, .markdown-preview h6 {
            margin-top: 1rem;
            margin-bottom: 0.5rem;
            font-weight: 600;
        }

        .markdown-preview p {
            margin-bottom: 1rem;
            line-height: 1.6;
        }

        .markdown-preview code {
            background-color: #f8f9fc;
            padding: 0.2rem 0.4rem;
            border-radius: 0.25rem;
            font-family: 'Courier New', monospace;
        }

        .markdown-preview pre {
            background-color: #f8f9fc;
            padding: 1rem;
            border-radius: 0.375rem;
            overflow-x: auto;
        }

        .markdown-preview blockquote {
            border-left: 4px solid #dee2e6;
            padding-left: 1rem;
            margin-left: 0;
            color: #6c757d;
        }

        .markdown-preview ul, .markdown-preview ol {
            margin-bottom: 1rem;
            padding-left: 2rem;
        }

        .markdown-preview img {
            max-width: 100%;
            height: auto;
            border-radius: 0.375rem;
        }

        .markdown-preview a {
            color: #007bff;
            text-decoration: none;
        }

        .markdown-preview a:hover {
            text-decoration: underline;
        }

        /* ÈüøÊáâÂºèË®≠Ë®à */
        @media (max-width: 767.98px) {
            .d-flex.flex-wrap {
                flex-direction: column;
            }
            
            .d-flex.flex-wrap .btn {
                width: 100%;
                margin-bottom: 0.5rem;
            }
            
            .d-flex.justify-content-between {
                flex-direction: column;
                gap: 1rem;
            }
        }
    </style>
}

@section Scripts {
    <script>
        let currentForumId = @(Model?.ForumId ?? 0);

        // È†ÅÈù¢ËºâÂÖ•ÂÆåÊàêÂæåÂàùÂßãÂåñ
        document.addEventListener('DOMContentLoaded', function() {
            // Ë°®ÂñÆÊèê‰∫§
            document.getElementById('createPostForm').addEventListener('submit', function(e) {
                e.preventDefault();
                submitPost();
            });

            // Ëá™ÂãïÂÑ≤Â≠òËçâÁ®ø
            setInterval(autoSaveDraft, 30000); // ÊØè30ÁßíËá™ÂãïÂÑ≤Â≠ò

            // ËºâÂÖ•‰∏äÊ¨°ÁöÑËçâÁ®ø
            loadLastDraft();
        });

        // È†êË¶ΩË≤ºÊñá
        function previewPost() {
            const title = document.getElementById('title').value;
            const content = document.getElementById('content').value;
            const tags = document.getElementById('tags').value;
            const type = document.getElementById('type').value;

            if (!title.trim() || !content.trim()) {
                showToast('Ë´ãÂÖàÂ°´ÂØ´Ê®ôÈ°åÂíåÂÖßÂÆπ', 'warning');
                return;
            }

            // Êõ¥Êñ∞È†êË¶ΩÂçÄÂüü
            updatePreview(title, content, tags, type);

            // È°ØÁ§∫È†êË¶Ω Modal
            const modal = new bootstrap.Modal(document.getElementById('previewModal'));
            modal.show();
        }

        // Êõ¥Êñ∞È†êË¶ΩÂÖßÂÆπ
        function updatePreview(title, content, tags, type) {
            const previewContent = document.getElementById('previewContent');
            const modalPreviewContent = document.getElementById('modalPreviewContent');

            const previewHtml = generatePreviewHtml(title, content, tags, type);

            previewContent.innerHTML = previewHtml;
            previewContent.classList.add('preview-loaded');
            modalPreviewContent.innerHTML = previewHtml;
        }

        // ÁîüÊàêÈ†êË¶Ω HTML
        function generatePreviewHtml(title, content, tags, type) {
            let html = `
                <div class="markdown-preview">
                    <h1>${title}</h1>
                    <div class="mb-3">
                        <span class="badge bg-primary me-2">${type}</span>
                        ${tags ? tags.split(',').map(tag => `<span class="badge bg-light text-dark me-1">${tag.trim()}</span>`).join('') : ''}
                    </div>
                    <div class="content-preview">
                        ${content.replace(/\n/g, '<br>')}
                    </div>
                </div>
            `;
            return html;
        }

        // ÊèíÂÖ• Markdown
        function insertMarkdown(markdown) {
            const textarea = document.getElementById('content');
            const start = textarea.selectionStart;
            const end = textarea.selectionEnd;
            const text = textarea.value;
            const selectedText = text.substring(start, end);
            
            let newText;
            if (markdown.includes('**') && selectedText) {
                newText = `**${selectedText}**`;
            } else if (markdown.includes('*') && selectedText) {
                newText = `*${selectedText}*`;
            } else if (markdown.includes('[') && selectedText) {
                newText = `[${selectedText}](URL)`;
            } else if (markdown.includes('![') && selectedText) {
                newText = `![${selectedText}](URL)`;
            } else if (markdown.includes('`') && selectedText) {
                newText = `\`${selectedText}\``;
            } else if (markdown.includes('```')) {
                newText = '```\nÁ®ãÂºèÁ¢ºÂçÄÂ°ä\n```';
            } else if (markdown.includes('- ')) {
                newText = '- ÂàóË°®È†ÖÁõÆ';
            } else if (markdown.includes('> ')) {
                newText = '> ÂºïÁî®ÊñáÂ≠ó';
            } else if (markdown.includes('# ')) {
                newText = '# Ê®ôÈ°å';
            } else if (markdown.includes('## ')) {
                newText = '## Ê®ôÈ°å';
            } else {
                newText = markdown;
            }
            
            textarea.value = text.substring(0, start) + newText + text.substring(end);
            textarea.focus();
            textarea.setSelectionRange(start + newText.length, start + newText.length);
        }

        // ÊèíÂÖ•Ê®°Êùø
        function insertTemplate(templateType) {
            const textarea = document.getElementById('content');
            let template = '';

            switch (templateType) {
                case 'question':
                    template = `## ÂïèÈ°åÊèèËø∞

Ë´ãË©≥Á¥∞ÊèèËø∞ÊÇ®ÈÅáÂà∞ÁöÑÂïèÈ°åÔºö

## Áí∞Â¢ÉË≥áË®ä

- ÈÅäÊà≤ÁâàÊú¨Ôºö
- ‰ΩúÊ•≠Á≥ªÁµ±Ôºö
- ÂÖ∂‰ªñÁõ∏ÈóúË≥áË®äÔºö

## Â∑≤ÂòóË©¶ÁöÑËß£Ê±∫ÊñπÊ°à

Ë´ãÂàóÂá∫ÊÇ®Â∑≤Á∂ìÂòóË©¶ÈÅéÁöÑËß£Ê±∫ÊñπÊ≥ïÔºö

## ÊúüÊúõÁµêÊûú

Ë´ãÊèèËø∞ÊÇ®ÊúüÊúõÈÅîÂà∞ÁöÑÊïàÊûúÔºö`;
                    break;
                case 'guide':
                    template = `## ÊîªÁï•Ê¶ÇËø∞

Á∞°Ë¶ÅË™™ÊòéÊ≠§ÊîªÁï•ÁöÑÂÖßÂÆπÂíåÈÅ©Áî®Â∞çË±°Ôºö

## ÂâçÁΩÆÊ¢ù‰ª∂

ÂÆåÊàêÊ≠§ÊîªÁï•ÈúÄË¶ÅÁöÑÂâçÁΩÆÊ¢ù‰ª∂Ôºö

## Ë©≥Á¥∞Ê≠•È©ü

### Ê≠•È©ü 1
Ë©≥Á¥∞Ë™™ÊòéÁ¨¨‰∏ÄÂÄãÊ≠•È©ü

### Ê≠•È©ü 2
Ë©≥Á¥∞Ë™™ÊòéÁ¨¨‰∫åÂÄãÊ≠•È©ü

## Ê≥®ÊÑè‰∫ãÈ†Ö

Ë´ãÊ≥®ÊÑè‰ª•‰∏ãÂπæÈªûÔºö

## Á∏ΩÁµê

ÊîªÁï•ÁöÑÁ∏ΩÁµêÂíåÂøÉÂæóÔºö`;
                    break;
                case 'share':
                    template = `## ÂàÜ‰∫´ÂÖßÂÆπ

Á∞°Ë¶ÅË™™ÊòéÊÇ®Ë¶ÅÂàÜ‰∫´ÁöÑÂÖßÂÆπÔºö

## Ë©≥Á¥∞‰ªãÁ¥π

Ë©≥Á¥∞‰ªãÁ¥πÊÇ®Ë¶ÅÂàÜ‰∫´ÁöÑÂÖßÂÆπÔºö

## ÂÄã‰∫∫ÂøÉÂæó

ÂàÜ‰∫´ÊÇ®ÁöÑÂÄã‰∫∫ÂøÉÂæóÂíåÈ´îÊúÉÔºö

## Áõ∏ÈóúÈÄ£Áµê

Â¶ÇÊûúÊúâÁõ∏ÈóúÁöÑÈÄ£ÁµêÊàñË≥áÊ∫êÔºåÂèØ‰ª•Âú®ÈÄôË£°ÂàÜ‰∫´Ôºö

## ÁµêË™û

Á∏ΩÁµêÊÇ®ÁöÑÂàÜ‰∫´Ôºö`;
                    break;
            }

            if (template) {
                textarea.value = template;
                textarea.focus();
                showToast('Ê®°ÊùøÂ∑≤ÊèíÂÖ•', 'success');
            }
        }

        // ÈáçÁΩÆË°®ÂñÆ
        function resetForm() {
            if (confirm('Á¢∫ÂÆöË¶ÅÈáçÁΩÆÊâÄÊúâÂÖßÂÆπÂóéÔºüÊ≠§Êìç‰ΩúÁÑ°Ê≥ïÂæ©Âéü„ÄÇ')) {
                document.getElementById('title').value = '';
                document.getElementById('content').value = '';
                document.getElementById('tags').value = '';
                document.getElementById('type').value = 'discussion';
                document.getElementById('notifyFollowers').checked = true;
                document.getElementById('allowReplies').checked = true;
                
                // ÈáçÁΩÆÈ†êË¶Ω
                const previewContent = document.getElementById('previewContent');
                previewContent.innerHTML = '<p class="text-muted text-center">ÈªûÊìäÈ†êË¶ΩÊåâÈàïÊü•ÁúãÊïàÊûú</p>';
                previewContent.classList.remove('preview-loaded');
                
                showToast('Ë°®ÂñÆÂ∑≤ÈáçÁΩÆ', 'info');
            }
        }

        // Ëá™ÂãïÂÑ≤Â≠òËçâÁ®ø
        function autoSaveDraft() {
            const title = document.getElementById('title').value;
            const content = document.getElementById('content').value;
            const tags = document.getElementById('tags').value;
            const type = document.getElementById('type').value;

            if (title.trim() || content.trim()) {
                const draft = {
                    forumId: currentForumId,
                    title: title,
                    content: content,
                    tags: tags,
                    type: type,
                    timestamp: new Date().toISOString()
                };

                localStorage.setItem('forumPostDraft', JSON.stringify(draft));
            }
        }

        // ÂÑ≤Â≠òËçâÁ®ø
        function saveAsDraft() {
            autoSaveDraft();
            showToast('ËçâÁ®øÂ∑≤ÂÑ≤Â≠ò', 'success');
        }

        // ËºâÂÖ•ËçâÁ®ø
        function loadDraft() {
            const draft = localStorage.getItem('forumPostDraft');
            if (draft) {
                try {
                    const draftData = JSON.parse(draft);
                    
                    // Ê™¢Êü•ÊòØÂê¶ÁÇ∫Áï∂ÂâçÁâàÈù¢ÁöÑËçâÁ®ø
                    if (draftData.forumId === currentForumId) {
                        document.getElementById('title').value = draftData.title || '';
                        document.getElementById('content').value = draftData.content || '';
                        document.getElementById('tags').value = draftData.tags || '';
                        document.getElementById('type').value = draftData.type || 'discussion';
                        
                        showToast('ËçâÁ®øÂ∑≤ËºâÂÖ•', 'success');
                    } else {
                        showToast('Ê≤íÊúâÊâæÂà∞Áï∂ÂâçÁâàÈù¢ÁöÑËçâÁ®ø', 'info');
                    }
                } catch (error) {
                    showToast('ËºâÂÖ•ËçâÁ®øÂ§±Êïó', 'error');
                }
            } else {
                showToast('Ê≤íÊúâÊâæÂà∞ËçâÁ®ø', 'info');
            }
        }

        // ËºâÂÖ•‰∏äÊ¨°ÁöÑËçâÁ®ø
        function loadLastDraft() {
            const draft = localStorage.getItem('forumPostDraft');
            if (draft) {
                try {
                    const draftData = JSON.parse(draft);
                    if (draftData.forumId === currentForumId && (draftData.title.trim() || draftData.content.trim())) {
                        if (confirm('ÁôºÁèæÊú™ÂÆåÊàêÁöÑËçâÁ®øÔºåÊòØÂê¶Ë¶ÅËºâÂÖ•Ôºü')) {
                            loadDraft();
                        }
                    }
                } catch (error) {
                    console.error('Error loading last draft:', error);
                }
            }
        }

        // Êèê‰∫§Ë≤ºÊñá
        function submitPost() {
            const title = document.getElementById('title').value.trim();
            const content = document.getElementById('content').value.trim();
            const tags = document.getElementById('tags').value.trim();
            const type = document.getElementById('type').value;
            const notifyFollowers = document.getElementById('notifyFollowers').checked;
            const allowReplies = document.getElementById('allowReplies').checked;

            if (!title) {
                showToast('Ë´ãËº∏ÂÖ•Ê®ôÈ°å', 'warning');
                document.getElementById('title').focus();
                return;
            }

            if (!content) {
                showToast('Ë´ãËº∏ÂÖ•ÂÖßÂÆπ', 'warning');
                document.getElementById('content').focus();
                return;
            }

            // Êèê‰∫§Ë°®ÂñÆ
            fetch('/api/forum/post/create', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    forumId: currentForumId,
                    title: title,
                    content: content,
                    tags: tags ? tags.split(',').map(t => t.trim()).filter(t => t) : [],
                    type: type,
                    notifyFollowers: notifyFollowers,
                    allowReplies: allowReplies
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showToast('Ë≤ºÊñáÁôºË°®ÊàêÂäü', 'success');
                    // Ê∏ÖÈô§ËçâÁ®ø
                    localStorage.removeItem('forumPostDraft');
                    // Ë∑≥ËΩâÂà∞Ë≤ºÊñáÈ†ÅÈù¢
                    setTimeout(() => {
                        window.location.href = `/Forum/Post/${data.data.postId}`;
                    }, 1500);
                } else {
                    showToast(`ÁôºË°®Â§±ÊïóÔºö${data.message}`, 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showToast('ÁôºË°®ÊôÇÁôºÁîüÈåØË™§ÔºåË´ãÁ®çÂæåÂÜçË©¶„ÄÇ', 'error');
            });
        }

        // È°ØÁ§∫ÊèêÁ§∫Ë®äÊÅØ
        function showToast(message, type = 'info') {
            if (type === 'success') {
                alert('‚úÖ ' + message);
            } else if (type === 'error') {
                alert('‚ùå ' + message);
            } else if (type === 'warning') {
                alert('‚ö†Ô∏è ' + message);
            } else {
                alert(message);
            }
        }

        // È†ÅÈù¢Èõ¢ÈñãÂâçÊèêÈÜíÂÑ≤Â≠ò
        window.addEventListener('beforeunload', function(e) {
            const title = document.getElementById('title').value;
            const content = document.getElementById('content').value;
            
            if (title.trim() || content.trim()) {
                e.preventDefault();
                e.returnValue = 'ÊÇ®ÊúâÊú™ÂÑ≤Â≠òÁöÑÂÖßÂÆπÔºåÁ¢∫ÂÆöË¶ÅÈõ¢ÈñãÂóéÔºü';
                return 'ÊÇ®ÊúâÊú™ÂÑ≤Â≠òÁöÑÂÖßÂÆπÔºåÁ¢∫ÂÆöË¶ÅÈõ¢ÈñãÂóéÔºü';
            }
        });
    </script>
}