@model GameCore.Web.Controllers.StoreMvcController.CartViewModel
@{
    ViewData["Title"] = "購物車";
    ViewData["Description"] = "管理您的購物車商品";
}

@section Styles {
    <style>
        .cart-container {
            background: white;
            border-radius: 12px;
            padding: 2rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        
        .cart-item {
            background: white;
            border: 1px solid #e9ecef;
            border-radius: 8px;
            padding: 1.5rem;
            margin-bottom: 1rem;
            transition: all 0.2s;
        }
        
        .cart-item:hover {
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }
        
        .cart-item-image {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border-radius: 8px;
            background: #f8f9fa;
        }
        
        .quantity-controls {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .quantity-btn {
            width: 32px;
            height: 32px;
            border: 1px solid #dee2e6;
            background: white;
            border-radius: 4px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.2s;
        }
        
        .quantity-btn:hover {
            background: #f8f9fa;
            border-color: #adb5bd;
        }
        
        .quantity-input {
            width: 60px;
            text-align: center;
            border: 1px solid #dee2e6;
            border-radius: 4px;
            padding: 0.25rem;
        }
        
        .price-display {
            font-size: 1.2rem;
            font-weight: bold;
            color: #dc3545;
        }
        
        .cart-summary {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 2rem;
            position: sticky;
            top: 2rem;
        }
        
        .summary-row {
            display: flex;
            justify-content: space-between;
            padding: 0.5rem 0;
            border-bottom: 1px solid #dee2e6;
        }
        
        .summary-row:last-child {
            border-bottom: none;
            font-weight: bold;
            font-size: 1.2rem;
            color: #dc3545;
        }
        
        .empty-cart {
            text-align: center;
            padding: 4rem 2rem;
        }
        
        .empty-cart i {
            font-size: 4rem;
            color: #6c757d;
            margin-bottom: 1rem;
        }
    </style>
}

<div class="container py-4">
    <!-- 頁面標題 -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="mb-0">
            <i class="fas fa-shopping-cart text-primary me-2"></i>
            購物車
        </h1>
        <a href="@Url.Action("Index", "StoreMvc")" class="btn btn-outline-primary">
            <i class="fas fa-arrow-left me-2"></i>
            繼續購物
        </a>
    </div>

    @if (Model.CartItems.Any())
    {
        <div class="row">
            <!-- 購物車商品列表 -->
            <div class="col-lg-8">
                <div class="cart-container">
                    <h4 class="mb-4">購物車商品 (@Model.CartItems.Count 件)</h4>
                    
                    @foreach (var item in Model.CartItems)
                    {
                        <div class="cart-item" data-cart-id="@item.CartId">
                            <div class="row align-items-center">
                                <div class="col-md-2">
                                    <img src="@(string.IsNullOrEmpty(item.ImageUrl) ? "/images/placeholder.jpg" : item.ImageUrl)" 
                                         alt="@item.ProductName" class="cart-item-image">
                                </div>
                                <div class="col-md-4">
                                    <h6 class="mb-1">@item.ProductName</h6>
                                    <p class="text-muted small mb-0">商品編號: @item.ProductId</p>
                                </div>
                                <div class="col-md-2">
                                    <div class="quantity-controls">
                                        <button class="quantity-btn" onclick="changeQuantity(@item.CartId, -1)">-</button>
                                        <input type="number" class="quantity-input" value="@item.Quantity" 
                                               min="1" max="99" onchange="updateQuantity(@item.CartId, this.value)">
                                        <button class="quantity-btn" onclick="changeQuantity(@item.CartId, 1)">+</button>
                                    </div>
                                </div>
                                <div class="col-md-2 text-center">
                                    <div class="price-display">NT$ @item.Price.ToString("N0")</div>
                                </div>
                                <div class="col-md-2 text-end">
                                    <div class="d-flex flex-column gap-2">
                                        <div class="fw-bold">NT$ @item.Subtotal.ToString("N0")</div>
                                        <button class="btn btn-outline-danger btn-sm" onclick="removeItem(@item.CartId)">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- 購物車摘要 -->
            <div class="col-lg-4">
                <div class="cart-summary">
                    <h4 class="mb-4">購物車摘要</h4>
                    
                    <div class="summary-row">
                        <span>商品總數</span>
                        <span>@Model.CartItems.Sum(item => item.Quantity) 件</span>
                    </div>
                    <div class="summary-row">
                        <span>商品小計</span>
                        <span>NT$ @Model.TotalAmount.ToString("N0")</span>
                    </div>
                    <div class="summary-row">
                        <span>運費</span>
                        <span>NT$ 0</span>
                    </div>
                    <div class="summary-row">
                        <span>總計</span>
                        <span>NT$ @Model.TotalAmount.ToString("N0")</span>
                    </div>
                    
                    <hr class="my-4">
                    
                    <div class="d-grid gap-2">
                        <a href="@Url.Action("Checkout", "StoreMvc")" class="btn btn-primary btn-lg">
                            <i class="fas fa-credit-card me-2"></i>
                            前往結帳
                        </a>
                        <button class="btn btn-outline-secondary" onclick="clearCart()">
                            <i class="fas fa-trash me-2"></i>
                            清空購物車
                        </button>
                    </div>
                    
                    <div class="mt-3">
                        <small class="text-muted">
                            <i class="fas fa-info-circle me-1"></i>
                            結帳前請確認商品數量與價格
                        </small>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <!-- 空購物車 -->
        <div class="cart-container">
            <div class="empty-cart">
                <i class="fas fa-shopping-cart"></i>
                <h3 class="text-muted">您的購物車是空的</h3>
                <p class="text-muted mb-4">快來選購您喜歡的商品吧！</p>
                <a href="@Url.Action("Index", "StoreMvc")" class="btn btn-primary btn-lg">
                    <i class="fas fa-shopping-bag me-2"></i>
                    開始購物
                </a>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // 數量變更功能
            window.changeQuantity = function(cartId, delta) {
                const input = $(`.cart-item[data-cart-id="${cartId}"] .quantity-input`);
                const newValue = parseInt(input.val()) + delta;
                
                if (newValue >= 1 && newValue <= 99) {
                    input.val(newValue);
                    updateQuantity(cartId, newValue);
                }
            };
            
            // 更新數量功能
            window.updateQuantity = function(cartId, quantity) {
                if (quantity < 1 || quantity > 99) {
                    return;
                }
                
                $.ajax({
                    url: '/api/Store/cart/update',
                    method: 'PUT',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        cartId: cartId,
                        quantity: parseInt(quantity)
                    }),
                    success: function(response) {
                        if (response.success) {
                            // 重新載入頁面以更新總計
                            location.reload();
                        } else {
                            showToast(response.message || '更新數量失敗', 'error');
                        }
                    },
                    error: function() {
                        showToast('更新數量失敗，請稍後再試', 'error');
                    }
                });
            };
            
            // 移除商品功能
            window.removeItem = function(cartId) {
                if (!confirm('確定要移除這個商品嗎？')) {
                    return;
                }
                
                $.ajax({
                    url: '/api/Store/cart/remove',
                    method: 'DELETE',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        cartId: cartId
                    }),
                    success: function(response) {
                        if (response.success) {
                            // 移除商品元素
                            $(`.cart-item[data-cart-id="${cartId}"]`).fadeOut(300, function() {
                                $(this).remove();
                                
                                // 檢查是否還有商品
                                if ($('.cart-item').length === 0) {
                                    location.reload();
                                }
                            });
                            
                            showToast('商品已移除', 'success');
                        } else {
                            showToast(response.message || '移除商品失敗', 'error');
                        }
                    },
                    error: function() {
                        showToast('移除商品失敗，請稍後再試', 'error');
                    }
                });
            };
            
            // 清空購物車功能
            window.clearCart = function() {
                if (!confirm('確定要清空購物車嗎？此操作無法復原。')) {
                    return;
                }
                
                $.ajax({
                    url: '/api/Store/cart/clear',
                    method: 'DELETE',
                    success: function(response) {
                        if (response.success) {
                            showToast('購物車已清空', 'success');
                            setTimeout(() => {
                                location.reload();
                            }, 1000);
                        } else {
                            showToast(response.message || '清空購物車失敗', 'error');
                        }
                    },
                    error: function() {
                        showToast('清空購物車失敗，請稍後再試', 'error');
                    }
                });
            };
            
            // 顯示 Toast 訊息
            function showToast(message, type) {
                const toast = $(`
                    <div class="toast align-items-center text-white bg-${type === 'success' ? 'success' : 'danger'} border-0" role="alert">
                        <div class="d-flex">
                            <div class="toast-body">${message}</div>
                            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                        </div>
                    </div>
                `);
                
                $('.toast-container').append(toast);
                const bsToast = new bootstrap.Toast(toast[0]);
                bsToast.show();
                
                // 自動移除
                setTimeout(() => {
                    toast.remove();
                }, 3000);
            }
        });
    </script>
} 