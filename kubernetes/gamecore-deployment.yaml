# GameCore Kubernetes 部署配置
# 用於 Kubernetes 叢集部署

apiVersion: v1
kind: Namespace
metadata:
  name: gamecore
  labels:
    name: gamecore
    environment: production

---
# ConfigMap - 應用程式配置
apiVersion: v1
kind: ConfigMap
metadata:
  name: gamecore-config
  namespace: gamecore
data:
  ASPNETCORE_ENVIRONMENT: "Production"
  ASPNETCORE_URLS: "http://+:80"
  TZ: "Asia/Taipei"
  DOTNET_RUNNING_IN_CONTAINER: "true"
  DOTNET_EnableDiagnostics: "0"

---
# Secret - 敏感資料
apiVersion: v1
kind: Secret
metadata:
  name: gamecore-secrets
  namespace: gamecore
type: Opaque
data:
  # Base64 編碼的連線字串
  ConnectionStrings__DefaultConnection: # 需要替換為實際的 Base64 編碼連線字串
  ConnectionStrings__Redis: # 需要替換為實際的 Base64 編碼 Redis 連線字串
  ApiKeys__GoogleOAuth: # Google OAuth 金鑰
  ApiKeys__FacebookOAuth: # Facebook OAuth 金鑰
  ApiKeys__DiscordOAuth: # Discord OAuth 金鑰

---
# PersistentVolumeClaim - 持久化儲存
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gamecore-uploads-pvc
  namespace: gamecore
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gamecore-logs-pvc
  namespace: gamecore
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard

---
# Deployment - 主應用程式
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gamecore-web
  namespace: gamecore
  labels:
    app: gamecore-web
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: gamecore-web
  template:
    metadata:
      labels:
        app: gamecore-web
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: gamecore-web
        image: ghcr.io/your-org/gamecore:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        
        # 環境變數
        envFrom:
        - configMapRef:
            name: gamecore-config
        - secretRef:
            name: gamecore-secrets
        
        # 資源限制
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        
        # 健康檢查
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        # 掛載點
        volumeMounts:
        - name: uploads-volume
          mountPath: /app/uploads
        - name: logs-volume
          mountPath: /app/logs
        - name: tmp-volume
          mountPath: /tmp
      
      # 資料卷
      volumes:
      - name: uploads-volume
        persistentVolumeClaim:
          claimName: gamecore-uploads-pvc
      - name: logs-volume
        persistentVolumeClaim:
          claimName: gamecore-logs-pvc
      - name: tmp-volume
        emptyDir: {}
      
      # 節點選擇和親和性
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - gamecore-web
              topologyKey: kubernetes.io/hostname

---
# Service - 內部負載均衡
apiVersion: v1
kind: Service
metadata:
  name: gamecore-web-service
  namespace: gamecore
  labels:
    app: gamecore-web
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: gamecore-web

---
# Ingress - 外部存取
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gamecore-ingress
  namespace: gamecore
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - gamecore.example.com
    - www.gamecore.example.com
    secretName: gamecore-tls
  rules:
  - host: gamecore.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: gamecore-web-service
            port:
              number: 80
  - host: www.gamecore.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: gamecore-web-service
            port:
              number: 80

---
# HorizontalPodAutoscaler - 自動擴展
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: gamecore-web-hpa
  namespace: gamecore
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gamecore-web
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60

---
# PodDisruptionBudget - 中斷預算
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: gamecore-web-pdb
  namespace: gamecore
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: gamecore-web

---
# NetworkPolicy - 網路政策
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: gamecore-network-policy
  namespace: gamecore
spec:
  podSelector:
    matchLabels:
      app: gamecore-web
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 80
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 80
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 1433  # SQL Server
    - protocol: TCP
      port: 6379  # Redis
    - protocol: TCP
      port: 53    # DNS
    - protocol: UDP
      port: 53    # DNS
    - protocol: TCP
      port: 443   # HTTPS
    - protocol: TCP
      port: 80    # HTTP

---
# ServiceMonitor - Prometheus 監控
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: gamecore-web-metrics
  namespace: gamecore
  labels:
    app: gamecore-web
spec:
  selector:
    matchLabels:
      app: gamecore-web
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s
