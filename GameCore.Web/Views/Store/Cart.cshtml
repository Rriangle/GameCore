@model List<GameCore.Core.Entities.ShoppingCartItem>
@{
    ViewData["Title"] = "購物車";
    ViewData["ActivePage"] = "Store";
}

<div class="container-fluid">
    <!-- 頁面標題 -->
    <div class="row mb-4">
        <div class="col-12">
            <h1 class="h3 mb-0 text-gray-800">
                <i class="fas fa-shopping-cart text-primary"></i>
                購物車
            </h1>
            <p class="text-muted">管理您的購物清單，準備結帳</p>
        </div>
    </div>

    @if (Model != null && Model.Any())
    {
        <div class="row">
            <!-- 購物車商品列表 -->
            <div class="col-lg-8 mb-4">
                <div class="card shadow-sm">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-list"></i>
                            購物車商品 (@Model.Count 件)
                        </h5>
                    </div>
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table table-hover mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th style="width: 50px;">
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" id="selectAll" checked>
                                                <label class="form-check-label" for="selectAll"></label>
                                            </div>
                                        </th>
                                        <th style="width: 80px;">商品</th>
                                        <th>商品資訊</th>
                                        <th style="width: 120px;">單價</th>
                                        <th style="width: 150px;">數量</th>
                                        <th style="width: 120px;">小計</th>
                                        <th style="width: 80px;">操作</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr class="cart-item" data-id="@item.Id" data-product-id="@item.ProductId">
                                            <td>
                                                <div class="form-check">
                                                    <input class="form-check-input item-checkbox" type="checkbox" checked 
                                                           data-price="@item.Product.Price" data-quantity="@item.Quantity">
                                                </div>
                                            </td>
                                            <td>
                                                <div class="product-image-small">
                                                    @if (!string.IsNullOrEmpty(item.Product.ImageUrl))
                                                    {
                                                        <img src="@item.Product.ImageUrl" class="img-thumbnail" alt="@item.Product.Name">
                                                    }
                                                    else
                                                    {
                                                        <div class="img-thumbnail product-placeholder d-flex align-items-center justify-content-center">
                                                            <i class="fas fa-image text-muted"></i>
                                                        </div>
                                                    }
                                                </div>
                                            </td>
                                            <td>
                                                <div class="product-info">
                                                    <h6 class="mb-1">
                                                        <a href="/Store/Product/@item.ProductId" class="text-decoration-none">
                                                            @item.Product.Name
                                                        </a>
                                                    </h6>
                                                    <p class="text-muted mb-1 small">@item.Product.Category</p>
                                                    @if (item.Product.Stock <= 10 && item.Product.Stock > 0)
                                                    {
                                                        <span class="badge badge-warning">庫存不足</span>
                                                    }
                                                    else if (item.Product.Stock == 0)
                                                    {
                                                        <span class="badge badge-danger">缺貨</span>
                                                    }
                                                </div>
                                            </td>
                                            <td>
                                                <div class="price-info">
                                                    @if (item.Product.OriginalPrice.HasValue && item.Product.OriginalPrice > item.Product.Price)
                                                    {
                                                        <div class="text-muted text-decoration-line-through small">
                                                            NT$ @item.Product.OriginalPrice.Value.ToString("N0")
                                                        </div>
                                                    }
                                                    <div class="text-primary fw-bold">
                                                        NT$ @item.Product.Price.ToString("N0")
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="quantity-controls">
                                                    <div class="input-group input-group-sm">
                                                        <button class="btn btn-outline-secondary" type="button" 
                                                                onclick="decreaseQuantity(@item.Id, @item.ProductId, @item.Quantity)"
                                                                @(item.Quantity <= 1 ? "disabled" : "")>
                                                            <i class="fas fa-minus"></i>
                                                        </button>
                                                        <input type="number" class="form-control text-center quantity-input" 
                                                               value="@item.Quantity" min="1" max="@item.Product.Stock"
                                                               onchange="updateQuantity(@item.Id, @item.ProductId, this.value)">
                                                        <button class="btn btn-outline-secondary" type="button" 
                                                                onclick="increaseQuantity(@item.Id, @item.ProductId, @item.Quantity, @item.Product.Stock)">
                                                            <i class="fas fa-plus"></i>
                                                        </button>
                                                    </div>
                                                    <small class="text-muted">庫存: @item.Product.Stock</small>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="subtotal-info">
                                                    <span class="fw-bold text-primary">
                                                        NT$ @((item.Product.Price * item.Quantity).ToString("N0"))
                                                    </span>
                                                </div>
                                            </td>
                                            <td>
                                                <button class="btn btn-sm btn-outline-danger" 
                                                        onclick="removeFromCart(@item.Id, @item.ProductId)">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="d-flex justify-content-between align-items-center">
                            <button class="btn btn-outline-secondary" onclick="clearCart()">
                                <i class="fas fa-trash"></i> 清空購物車
                            </button>
                            <div class="text-muted">
                                已選擇 <span id="selectedCount">@Model.Count</span> 件商品
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- 購物車摘要 -->
            <div class="col-lg-4 mb-4">
                <div class="card shadow-sm">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-calculator"></i>
                            購物車摘要
                        </h5>
                    </div>
                    <div class="card-body">
                        <!-- 商品統計 -->
                        <div class="cart-summary mb-3">
                            <div class="d-flex justify-content-between mb-2">
                                <span>商品總數</span>
                                <span id="totalItems">@Model.Count</span>
                            </div>
                            <div class="d-flex justify-content-between mb-2">
                                <span>商品總價</span>
                                <span id="subtotal">NT$ 0</span>
                            </div>
                            <div class="d-flex justify-content-between mb-2">
                                <span>運費</span>
                                <span id="shipping">NT$ 0</span>
                            </div>
                            <hr>
                            <div class="d-flex justify-content-between">
                                <strong>總計</strong>
                                <strong class="text-primary" id="totalAmount">NT$ 0</strong>
                            </div>
                        </div>

                        <!-- 優惠券 -->
                        <div class="coupon-section mb-3">
                            <label for="couponCode" class="form-label">優惠券</label>
                            <div class="input-group">
                                <input type="text" class="form-control" id="couponCode" placeholder="輸入優惠券代碼">
                                <button class="btn btn-outline-primary" type="button" onclick="applyCoupon()">
                                    使用
                                </button>
                            </div>
                            <div id="couponMessage" class="mt-2"></div>
                        </div>

                        <!-- 結帳按鈕 -->
                        <div class="checkout-section">
                            <button class="btn btn-primary w-100 mb-2" onclick="proceedToCheckout()">
                                <i class="fas fa-credit-card"></i> 立即結帳
                            </button>
                            <button class="btn btn-outline-primary w-100" onclick="continueShopping()">
                                <i class="fas fa-arrow-left"></i> 繼續購物
                            </button>
                        </div>

                        <!-- 購物須知 -->
                        <div class="shopping-notes mt-3">
                            <small class="text-muted">
                                <i class="fas fa-info-circle"></i>
                                購物須知：
                            </small>
                            <ul class="small text-muted mt-1">
                                <li>商品價格以結帳時為準</li>
                                <li>支援 7 天無條件退換貨</li>
                                <li>運費依配送方式計算</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- 推薦商品 -->
        <div class="row mt-4">
            <div class="col-12">
                <div class="card shadow-sm">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-thumbs-up"></i>
                            為您推薦
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="text-center py-4">
                            <i class="fas fa-lightbulb fa-3x text-muted mb-3"></i>
                            <h6 class="text-muted">推薦功能開發中</h6>
                            <p class="text-muted small">我們正在為您準備個性化商品推薦。</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <!-- 購物車為空 -->
        <div class="row">
            <div class="col-12">
                <div class="card shadow-sm">
                    <div class="card-body text-center py-5">
                        <i class="fas fa-shopping-cart fa-4x text-muted mb-3"></i>
                        <h4 class="text-muted">購物車是空的</h4>
                        <p class="text-muted">您還沒有添加任何商品到購物車。</p>
                        <a href="/Store" class="btn btn-primary">
                            <i class="fas fa-shopping-bag"></i> 去購物
                        </a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- 確認清空購物車 Modal -->
<div class="modal fade" id="clearCartModal" tabindex="-1" aria-labelledby="clearCartModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="clearCartModalLabel">
                    <i class="fas fa-exclamation-triangle text-warning"></i> 確認清空購物車
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>您確定要清空購物車嗎？此操作無法復原。</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-danger" onclick="confirmClearCart()">確認清空</button>
            </div>
        </div>
    </div>
</div>

<!-- 確認移除商品 Modal -->
<div class="modal fade" id="removeItemModal" tabindex="-1" aria-labelledby="removeItemModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="removeItemModalLabel">
                    <i class="fas fa-trash text-danger"></i> 確認移除商品
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>您確定要從購物車中移除這個商品嗎？</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-danger" onclick="confirmRemoveItem()">確認移除</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .cart-item {
            transition: background-color 0.2s ease;
        }

        .cart-item:hover {
            background-color: #f8f9fc;
        }

        .product-image-small {
            width: 60px;
            height: 60px;
        }

        .product-image-small img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .product-placeholder {
            width: 100%;
            height: 100%;
            background-color: #f8f9fc;
            color: #858796;
        }

        .product-info h6 {
            font-size: 0.9rem;
            line-height: 1.3;
        }

        .product-info p {
            font-size: 0.8rem;
        }

        .price-info .text-decoration-line-through {
            font-size: 0.8rem;
        }

        .quantity-controls .input-group {
            max-width: 120px;
        }

        .quantity-controls .form-control {
            text-align: center;
            font-size: 0.9rem;
        }

        .quantity-controls small {
            font-size: 0.75rem;
        }

        .subtotal-info {
            font-size: 0.9rem;
        }

        .cart-summary .d-flex {
            font-size: 0.9rem;
        }

        .cart-summary hr {
            margin: 0.75rem 0;
        }

        .coupon-section .input-group {
            max-width: 100%;
        }

        .checkout-section .btn {
            padding: 0.75rem 1rem;
            font-weight: 500;
        }

        .shopping-notes ul {
            padding-left: 1rem;
            margin-bottom: 0;
        }

        .shopping-notes li {
            margin-bottom: 0.25rem;
        }

        .table th {
            font-size: 0.85rem;
            font-weight: 600;
            color: #495057;
            border-top: none;
            border-bottom: 2px solid #e3e6f0;
        }

        .table td {
            vertical-align: middle;
            border-top: 1px solid #e3e6f0;
        }

        .card-header {
            background-color: #f8f9fc;
            border-bottom: 1px solid #e3e6f0;
        }

        .card-footer {
            background-color: #f8f9fc;
            border-top: 1px solid #e3e6f0;
        }

        .badge {
            font-size: 0.7rem;
        }

        .btn-sm {
            font-size: 0.8rem;
            padding: 0.375rem 0.5rem;
        }

        .form-check-input:checked {
            background-color: #007bff;
            border-color: #007bff;
        }

        .quantity-input:invalid {
            border-color: #dc3545;
        }

        .quantity-input:valid {
            border-color: #28a745;
        }
    </style>
}

@section Scripts {
    <script>
        let cartItems = @Html.Raw(Json.Serialize(Model ?? new List<GameCore.Core.Entities.ShoppingCartItem>()));
        let selectedItems = new Set();
        let itemToRemove = null;

        // 頁面載入完成後初始化
        document.addEventListener('DOMContentLoaded', function() {
            initializeCart();
            updateSummary();
        });

        // 初始化購物車
        function initializeCart() {
            // 初始化選中的商品
            cartItems.forEach(item => {
                selectedItems.add(item.id);
            });
            
            // 全選/取消全選
            document.getElementById('selectAll').addEventListener('change', function() {
                const checkboxes = document.querySelectorAll('.item-checkbox');
                checkboxes.forEach(checkbox => {
                    checkbox.checked = this.checked;
                    if (this.checked) {
                        selectedItems.add(parseInt(checkbox.closest('.cart-item').dataset.id));
                    } else {
                        selectedItems.delete(parseInt(checkbox.closest('.cart-item').dataset.id));
                    }
                });
                updateSummary();
            });

            // 個別商品選擇
            document.querySelectorAll('.item-checkbox').forEach(checkbox => {
                checkbox.addEventListener('change', function() {
                    const itemId = parseInt(this.closest('.cart-item').dataset.id);
                    if (this.checked) {
                        selectedItems.add(itemId);
                    } else {
                        selectedItems.delete(itemId);
                    }
                    updateSummary();
                    updateSelectAllStatus();
                });
            });
        }

        // 更新全選狀態
        function updateSelectAllStatus() {
            const checkboxes = document.querySelectorAll('.item-checkbox');
            const selectAllCheckbox = document.getElementById('selectAll');
            
            if (checkboxes.length === 0) return;
            
            const checkedCount = Array.from(checkboxes).filter(cb => cb.checked).length;
            selectAllCheckbox.checked = checkedCount === checkboxes.length;
            selectAllCheckbox.indeterminate = checkedCount > 0 && checkedCount < checkboxes.length;
        }

        // 更新購物車摘要
        function updateSummary() {
            let totalItems = 0;
            let subtotal = 0;
            
            selectedItems.forEach(itemId => {
                const cartItem = cartItems.find(item => item.id === itemId);
                if (cartItem) {
                    totalItems += cartItem.quantity;
                    subtotal += cartItem.product.price * cartItem.quantity;
                }
            });
            
            const shipping = totalItems > 0 ? 60 : 0; // 運費 60 元
            const total = subtotal + shipping;
            
            document.getElementById('totalItems').textContent = totalItems;
            document.getElementById('subtotal').textContent = `NT$ ${subtotal.toLocaleString()}`;
            document.getElementById('shipping').textContent = `NT$ ${shipping.toLocaleString()}`;
            document.getElementById('totalAmount').textContent = `NT$ ${total.toLocaleString()}`;
            document.getElementById('selectedCount').textContent = selectedItems.size;
        }

        // 減少數量
        function decreaseQuantity(itemId, productId, currentQuantity) {
            if (currentQuantity > 1) {
                updateQuantity(itemId, productId, currentQuantity - 1);
            }
        }

        // 增加數量
        function increaseQuantity(itemId, productId, currentQuantity, maxStock) {
            if (currentQuantity < maxStock) {
                updateQuantity(itemId, productId, currentQuantity + 1);
            }
        }

        // 更新數量
        function updateQuantity(itemId, productId, newQuantity) {
            const maxStock = cartItems.find(item => item.id === itemId)?.product.stock || 0;
            
            if (newQuantity < 1) {
                newQuantity = 1;
            } else if (newQuantity > maxStock) {
                newQuantity = maxStock;
                showToast(`數量不能超過庫存上限 (${maxStock})`, 'warning');
            }
            
            fetch('/api/store/cart/update', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    itemId: itemId,
                    quantity: newQuantity
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // 更新本地數據
                    const cartItem = cartItems.find(item => item.id === itemId);
                    if (cartItem) {
                        cartItem.quantity = newQuantity;
                    }
                    
                    // 更新顯示
                    updateCartItemDisplay(itemId);
                    updateSummary();
                    
                    showToast('數量更新成功', 'success');
                } else {
                    showToast(`數量更新失敗：${data.message}`, 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showToast('數量更新時發生錯誤，請稍後再試。', 'error');
            });
        }

        // 更新購物車項目顯示
        function updateCartItemDisplay(itemId) {
            const cartItem = cartItems.find(item => item.id === itemId);
            if (!cartItem) return;
            
            const row = document.querySelector(`[data-id="${itemId}"]`);
            if (!row) return;
            
            // 更新數量輸入框
            const quantityInput = row.querySelector('.quantity-input');
            quantityInput.value = cartItem.quantity;
            
            // 更新小計
            const subtotalElement = row.querySelector('.subtotal-info .fw-bold');
            subtotalElement.textContent = `NT$ ${(cartItem.product.price * cartItem.quantity).toLocaleString()}`;
            
            // 更新按鈕狀態
            const decreaseBtn = row.querySelector('.btn-outline-secondary:first-of-type');
            const increaseBtn = row.querySelector('.btn-outline-secondary:last-of-type');
            
            decreaseBtn.disabled = cartItem.quantity <= 1;
            increaseBtn.disabled = cartItem.quantity >= cartItem.product.stock;
        }

        // 從購物車移除
        function removeFromCart(itemId, productId) {
            itemToRemove = { itemId, productId };
            const modal = new bootstrap.Modal(document.getElementById('removeItemModal'));
            modal.show();
        }

        // 確認移除商品
        function confirmRemoveItem() {
            if (!itemToRemove) return;
            
            fetch(`/api/store/cart/remove/${itemToRemove.itemId}`, {
                method: 'DELETE'
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // 從本地數據移除
                    cartItems = cartItems.filter(item => item.id !== itemToRemove.itemId);
                    selectedItems.delete(itemToRemove.itemId);
                    
                    // 從頁面移除
                    const row = document.querySelector(`[data-id="${itemToRemove.itemId}"]`);
                    if (row) {
                        row.remove();
                    }
                    
                    // 更新摘要
                    updateSummary();
                    updateSelectAllStatus();
                    
                    // 檢查購物車是否為空
                    if (cartItems.length === 0) {
                        location.reload(); // 重新載入頁面顯示空購物車狀態
                    }
                    
                    showToast('商品已從購物車移除', 'success');
                } else {
                    showToast(`移除失敗：${data.message}`, 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showToast('移除商品時發生錯誤，請稍後再試。', 'error');
            })
            .finally(() => {
                bootstrap.Modal.getInstance(document.getElementById('removeItemModal')).hide();
                itemToRemove = null;
            });
        }

        // 清空購物車
        function clearCart() {
            const modal = new bootstrap.Modal(document.getElementById('clearCartModal'));
            modal.show();
        }

        // 確認清空購物車
        function confirmClearCart() {
            fetch('/api/store/cart/clear', {
                method: 'DELETE'
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showToast('購物車已清空', 'success');
                    location.reload(); // 重新載入頁面
                } else {
                    showToast(`清空失敗：${data.message}`, 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showToast('清空購物車時發生錯誤，請稍後再試。', 'error');
            })
            .finally(() => {
                bootstrap.Modal.getInstance(document.getElementById('clearCartModal')).hide();
            });
        }

        // 使用優惠券
        function applyCoupon() {
            const couponCode = document.getElementById('couponCode').value.trim();
            if (!couponCode) {
                showToast('請輸入優惠券代碼', 'warning');
                return;
            }
            
            fetch('/api/store/coupon/apply', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    couponCode: couponCode
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    document.getElementById('couponMessage').innerHTML = 
                        `<div class="text-success"><i class="fas fa-check-circle"></i> ${data.message}</div>`;
                    // 這裡應該更新價格計算
                    updateSummary();
                } else {
                    document.getElementById('couponMessage').innerHTML = 
                        `<div class="text-danger"><i class="fas fa-times-circle"></i> ${data.message}</div>`;
                }
            })
            .catch(error => {
                console.error('Error:', error);
                document.getElementById('couponMessage').innerHTML = 
                    '<div class="text-danger"><i class="fas fa-times-circle"></i> 優惠券驗證失敗，請稍後再試</div>';
            });
        }

        // 繼續購物
        function continueShopping() {
            window.location.href = '/Store';
        }

        // 前往結帳
        function proceedToCheckout() {
            if (selectedItems.size === 0) {
                showToast('請選擇要結帳的商品', 'warning');
                return;
            }
            
            // 檢查庫存
            let hasOutOfStock = false;
            selectedItems.forEach(itemId => {
                const cartItem = cartItems.find(item => item.id === itemId);
                if (cartItem && cartItem.quantity > cartItem.product.stock) {
                    hasOutOfStock = true;
                }
            });
            
            if (hasOutOfStock) {
                showToast('部分商品庫存不足，請調整數量後再結帳', 'warning');
                return;
            }
            
            // 跳轉到結帳頁面
            const selectedIds = Array.from(selectedItems).join(',');
            window.location.href = `/Store/Checkout?items=${selectedIds}`;
        }

        // 顯示提示訊息
        function showToast(message, type = 'info') {
            // 這裡可以使用 Toast 組件或 alert
            if (type === 'success') {
                alert('✅ ' + message);
            } else if (type === 'error') {
                alert('❌ ' + message);
            } else if (type === 'warning') {
                alert('⚠️ ' + message);
            } else {
                alert(message);
            }
        }
    </script>
}